"""remove_tags_table

Revision ID: 9008f6cab729
Revises: 8c6217b4b9ef
Create Date: 2020-10-01 11:11:56.759751

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "9008f6cab729"
down_revision = "8c6217b4b9ef"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("DROP TABLE article_tag CASCADE")
    op.execute("DROP TABLE tag CASCADE")
    op.add_column("article", sa.Column("tags", sa.JSON(), nullable=True))
    op.execute("UPDATE article SET tags = '[]'")
    op.alter_column("article", "tags", nullable=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("article", "tags")
    op.create_table(
        "article_tag",
        sa.Column("article_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("tag_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["article_id"], ["article.uuid"], name="article_tag_article_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["tag_id"], ["tag.uuid"], name="article_tag_tag_id_fkey"
        ),
        sa.PrimaryKeyConstraint("article_id", "tag_id", name="article_tag_pkey"),
    )
    op.create_table(
        "tag",
        sa.Column("uuid", sa.VARCHAR(length=36), autoincrement=False, nullable=False),
        sa.Column(
            "created", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "modified", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column("value", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "created_by_",
            sa.VARCHAR(),
            server_default=sa.text("'sys'::character varying"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "modified_by_",
            sa.VARCHAR(),
            server_default=sa.text("'sys'::character varying"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("uuid", name="tag_pkey"),
        sa.UniqueConstraint("value", name="tag_value_key"),
    )
    # ### end Alembic commands ###
